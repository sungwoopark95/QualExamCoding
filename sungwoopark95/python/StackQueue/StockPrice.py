"""
예지는 HS컴퓨팅이라는 주식에 단기투자를 통하여 수익을 내려고 한다. 아래 표는 HS컴퓨팅의 날짜 별 주가이다. 예지는 수익을 내기 위하여 걸리는 최소 며칠을 기다려야 하는지, 즉 최소 일수를 알고싶어 한다.

| 날짜 | 주가 | 일수 |
|:---:|:---:|:---:|
|10/7 | 500|1|
|10/8 | 600|1|
|10/9 | 700|4|
|10/10 | 300|2|
|10/11 | 100|1|
|10/12 | 400|1|
|10/13 | 800|0|
|10/14 | 500|0|

위의 표를 보면 

1) 예지가 10/7에 주식을 산다면 1일 뒤인 10/8에 팔면 이득을 본다. 
2) 예지가 10/9에 주식을 산다면 4일 뒤인 10/13에 팔면 이득을 본다. 
3) 이득을 볼 수 없다면 0으로 작성하면 된다. 
"""
from typing import List
from LinkedListBasedStack import Stack

def P2(stock_price:List[int]):
    s = Stack()
    ans = [0 for _ in range(len(stock_price))]
    # 첫날의 index를 push
    s.push(0)
    for i in range(1, len(stock_price)):
        # 현재 가격보다 싼 날을 모두 꺼낸 다음, 현재 날짜와의 차이를 비교하여 일수를 구함
        while not s.isEmpty() and stock_price[s.top()] < stock_price[i]:
            idx = s.pop()
            ans[idx] = i - idx
        # while을 빠져나왔을 때, stack에는 현재 날짜의 가격보다 비싼 날의 날짜만 남아있거나 혹은 비어있음
        s.push(i) # 현재 날짜를 다시 push
    return ans

if __name__ == "__main__":
    print(P2([100, 200, 300, 400, 500]))  # [1, 1, 1, 1, 0]
    print(P2([500, 400, 300, 200, 100]))  # [0, 0, 0, 0, 0]
    print(P2([100, 300, 200, 400, 500, 300]))  # [1, 2, 1, 1, 0, 0]
    print(P2([100, 200, 150, 250, 300, 200, 350, 400]))  # [1, 2, 1, 1, 2, 1, 1, 0]
    print(P2([300, 300, 300, 300, 300]))  # [0, 0, 0, 0, 0]
